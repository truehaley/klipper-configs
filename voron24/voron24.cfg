[printer]
kinematics: corexy
max_velocity: 350           # Tested up to xxx, with TEST_SPEED
max_accel: 8000    #12000   # Tested up to 12000 reliably but input shaper suggests as low as 2100
max_z_velocity: 100
max_z_accel: 1000
square_corner_velocity: 5.0 

#AUTO SPEED found recommended acceleration and velocity after 584.12s
#| DIAG X max: a15855 v374
#| DIAG Y max: a13794 v374
#Recommended accel: 13794
#Recommended velocity: 374

# Main Controller
[mcu]
# BIGTREETECH Octopus Pro 
serial: /dev/serial/by-id/usb-Klipper_stm32f429xx_31002B000D50533850353920-if00  
restart_method: command

[mcu toolhead]
# BIGTREETECH EBB SB2209
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_090031001350425539393020-if00
restart_method: command

;[mcu s2dw_resonance]
# BIGTREETECH S2DW
;serial: /dev/serial/by-id/usb-Klipper_rp2040_455035712913AC78-if00
;restart_method: command
;[lis2dw]
;cs_pin: s2dw_resonance:gpio9
;spi_software_sclk_pin: s2dw_resonance:gpio10
;spi_software_mosi_pin: s2dw_resonance:gpio11
;spi_software_miso_pin: s2dw_resonance:gpio8
;axes_map: y,x,-z

# Note, normally all paths are file-relative, but this file is loaded via a symlink
# from the root of the printer_data/config folder, so paths are relative to the root
[include corexy.cfg]
[include bed.cfg]
[include toolhead.cfg]
#[include chamber.cfg]
#[include display.cfg]
[include lighting.cfg]

[include macros.cfg]
#[include klicky-variables.cfg]
[include KAMP_Settings.cfg]

[delayed_gcode run_at_boot]
initial_duration: 0.1
gcode:
  # disable the filament sensor until a print starts!
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

[filament_motion_sensor filament_sensor]
detection_length: 10
extruder: extruder
switch_pin: PG15  # (pullup on board)
pause_on_runout: True
insert_gcode:
    M117 Filament Insert Detected
runout_gcode:
    STATUS_LED_ERROR
    M117 Filament Runout Detected


# [controller_fan pcb_fan]      # Optional fan for cooling your PCBs
# pin: gpio20
# max_power: 1.0
# kick_start_time: 0.5                                                
# heater: heater_bed

## Buzzer - Frame PCB
#[output_pin beeper]
#pin: umb:gpio5
#value: 0
#shutdown_value: 0

#[gcode_macro M300]
#description: Custom M300 code to allow beeper to be used in gcode
#gcode:
#    {% set TIME_MS = params.P|default(100)|float %}
#    SET_PIN PIN=beeper VALUE=1
#    G4 P{TIME_MS}
#    SET_PIN PIN=beeper VALUE=0

# [homing_override]
# axes: xyz
# #set_position_z: 0
# gcode:
#     {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
#     SAVE_GCODE_STATE NAME=STATE_HOME_OVERRIDE

#     # Home Z first, to avoid any situation where the nozzle might scrape the bed
#     # Also gives the stallguard registers of the x and y motors some time without motion to ensure they are clear
#     {% if home_all or 'Z' in params %}
#         G92 Z0 #Equivalent of set_position_z: 0, but only when actually homing Z!
#         G28 Z
#         G0 Z20
#     {% else %}
#         # ensures the X and Y motors haven't moved for a couple seconds, even if we didn't home Z
#         G4 P1000
#     {% endif %}

#     {% if home_all or 'X' in params %}
#         _HOME_X
#     {% endif %}

#     {% if home_all or 'Y' in params %}
#         _HOME_Y
#     {% endif %}
    
#     G90
#     G0 X60 Y60 Z20 F3600 # move to bed center
#     RESTORE_GCODE_STATE NAME=STATE_HOME_OVERRIDE

# Everything that's not printer specific
[include ../generic/common.cfg]
#[include ../klicky/klicky-probe.cfg]

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True    ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 175.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 340.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 10.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
#variable_retract          : 1.0   ; the value to retract while PAUSE
#variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract    : 35.0  ; retract speed in mm/s
#variable_unretract        : 1.0   ; the value to unretract while RESUME
#variable_speed_unretract  : 35.0  ; unretract speed in mm/s
#variable_speed_hop        : 15.0  ; z move speed in mm/s
#variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
#variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
#variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything insight the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything insight the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything insight the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:

[include ../generic/mainsail.cfg]

