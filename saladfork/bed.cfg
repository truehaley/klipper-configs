#####################################################################
#   Z Stepper Settings
#####################################################################

#############
## Z0 Stepper - Front Left
##  Connected to MOTOR_4
[stepper_z]
step_pin: PC6
dir_pin: !PC7
enable_pin: !PA9
endstop_pin: ^PC3
rotation_distance: 8
microsteps: 16
full_steps_per_rotation: 200
position_min: -2.5
position_max: 150
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_endstop: 3.0 

[tmc2209 stepper_z]
uart_pin: PB10
interpolate: True
run_current: 0.7       # Max 1.0 * 0.707 = 0.707

[autotune_tmc stepper_z]
motor: ldo-42sth25-1004cl200et

## Z1 Stepper - Rear Z Motor configuration
## ----------------------------------------
[stepper_z1]
step_pin: PB12
dir_pin: !PB11
enable_pin: !PA8

rotation_distance: 8    # For T8x8 integrated lead screw
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree


## Z1 Stepper UART config
## ----------------------------------------
[tmc2209 stepper_z1]
uart_pin: PB2
interpolate: True
run_current: 0.7       # Max 1.0 * 0.707 = 0.707

[autotune_tmc stepper_z1]
motor: ldo-42sth25-1004cl200et


## Z2 Stepper - Right Z Motor configuration
## ----------------------------------------
[stepper_z2]
step_pin: PB0
dir_pin: !PB1
enable_pin: !PC4

rotation_distance: 8    # For T8x8 integrated lead screw
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree


## Z2 Stepper UART config
## ----------------------------------------
[tmc2209 stepper_z2]
uart_pin: PA6
interpolate: True
run_current: 0.7       # Max 1.0 * 0.707 = 0.707

[autotune_tmc stepper_z2]
motor: ldo-42sth25-1004cl200et

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: PA5
sensor_type: Generic 3950
sensor_pin: PA0
smooth_time: 3.0
max_power: 0.8
min_temp: 0
max_temp: 120



####################################################################
## Z TILT CONFIGURATION
####################################################################

[probe]
pin: toolhead:PB6
x_offset: 0
y_offset: 25.0
z_offset: 5.350
speed: 10.0
samples: 2
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 4

[z_tilt]
z_positions:
#   A list of X,Y coordinates (one per line; subsequent lines
#   indented) describing the location of each bed "pivot point". The
#   "pivot point" is the point where the bed attaches to the given Z
#   stepper. It is described using nozzle coordinates (the XY position
#   of the nozzle if it could move directly above the point). The
#   first entry corresponds to stepper_z, the second to stepper_z1,
#   the third to stepper_z2, etc. This parameter must be provided.
    -50, -13
    75, 197
    200, -13

points:
#   A list of X,Y coordinates (one per line; subsequent lines
#   indented) that should be probed during a Z_TILT_ADJUST command.
#   Specify coordinates of the nozzle and be sure the probe is above
#   the bed at the given nozzle coordinates. This parameter must be
#   provided.
    20, 0
    80, 105
    140, 0

speed: 250
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 15
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
retries: 15
#   Number of times to retry if the probed points aren't within
#   tolerance.
retry_tolerance: 0.0075
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance. Note the smallest unit of
#   change here would be a single step. However if you are probing
#   more points than steppers then you will likely have a fixed
#   minimum value for the range of probed points which you can learn
#   by observing command output.