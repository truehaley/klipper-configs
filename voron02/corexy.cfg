#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]     # B motor of CoreXY config
step_pin: PA10
dir_pin: PA14
enable_pin: !PA13
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200    # 200 = 1.8° steps
position_endstop: 121.5
position_max: 122   # 118 soft limit
position_min: 1     # 2
homing_speed: 40
# Homing retract dist isn't normally recommended with sensorless homing, but
#   using a larger value can help to re-home more accurately if the axis was left very
#   close to the endstop position prior to homing 
#homing_retract_dist: 10  
homing_retract_dist: 0
homing_positive_dir: true
endstop_pin: tmc2209_stepper_x:virtual_endstop

[tmc2209 stepper_x]
# Dedicated UART pin for stepper, used for both rx and tx
uart_pin: PD8
diag_pin: ^PD2 
interpolate: False
run_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0    # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
driver_TBL: 1
driver_HEND: 3
driver_HSTRT: 2
driver_TOFF: 3
driver_SGTHRS: 95           # StallGuard for sensorless homing, tested to max of 110


[stepper_y]     # A motor of CoreXY config
step_pin: PC8
dir_pin: PC9                                                    # Check motor direction in link above. If inverted, add a ! before gpio10
enable_pin: !PA15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200    # 200 = 1.8° steps
#endstop_pin: ^gpio3
position_endstop: 124.2
position_max: 125   # 115 soft limit
position_min: 1     # 5
homing_speed: 40
#homing_retract_dist: 10
homing_retract_dist: 0
homing_positive_dir: true
endstop_pin: tmc2209_stepper_y:virtual_endstop

[tmc2209 stepper_y]
# Dedicated UART pin for stepper, used for both rx and tx
uart_pin: PD9
diag_pin: ^PD3
interpolate: False
run_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0    # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
driver_TBL: 1
driver_HEND: 3
driver_HSTRT: 2
driver_TOFF: 3
driver_SGTHRS: 85           # StallGuard for sensorless homing, tested to max of 100



#[adxl345]
#cs_pin: rpi:gpiochip0/gpio74
#spi_bus: spidev1.1

[resonance_tester]
accel_chip: adxl345
probe_points: 60, 60, 20



## Sensorless Homing
## This file contains configuration and macros pertaining to sensorless homing for the Voron 0.2 
## It is based on this guide: https://docs.vorondesign.com/community/howto/clee/sensorless_xy_homing.html

## make sure to set the X-DIAG and Y-DIAG jumpers to enable sensorless homing on your control board if needed

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
    SAVE_GCODE_STATE NAME=STATE_HOME_X

    # Home
    G28 X
    # Move away, ensure probe is clear for Y homing
    G91
    G1 X-25 F1200

    # Wait 1-2 second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    RESTORE_GCODE_STATE NAME=STATE_HOME_X

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
    SAVE_GCODE_STATE NAME=STATE_HOME_Y

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-5 F1200

    # Wait 1-2 seconds… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    RESTORE_GCODE_STATE NAME=STATE_HOME_Y


